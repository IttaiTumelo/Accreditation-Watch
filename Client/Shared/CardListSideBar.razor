@using Program=Accreditation_Watch.Shared.Entities.Program
@using Task=Accreditation_Watch.Shared.Entities.Task
@inject INoteService NoteService
@inject IProgramService ProgramService
@if (Notes is null)
{
     <h5>loading</h5>
}
else
{
     @if(Notes.Count == 0)
     {
          <h4>No notes related to @Program.Name [@Program.Id]</h4>
     }
     else
     {
          <h4>Notes related to this @Program.Name [@Program.Id]</h4>
          @if (Program is not null)
          {
               <div class="row grid-max-height">
                    @foreach (var item in NoteService.Objects.Where(x => x.ProgramId == Program.Id))
                    {
                         <Card Note="item"/>
                    }

               </div>
          }
          else
          {
               <p>No Note Selected</p>
          }
     } 
}



@code
{

     [Parameter]
     public Task Task { get; set; } = null;
     [Parameter]
     public Program Program { get; set; }
     
     public List<Note> Notes { get; set; }

     protected override async void OnInitialized()
     {
          await NoteService.Get();
          if(Program is not null)
          {
               Notes = NoteService.Objects.Where(x=> x.ProgramId ==Program.Id).ToList();
          }
          else if(Task is not null){

          }
          StateHasChanged();
     }
}