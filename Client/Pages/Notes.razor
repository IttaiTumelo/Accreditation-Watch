@page "/notes"
@using Program=Accreditation_Watch.Shared.Entities.Program
@inject INoteService NoteService
@inject IProgramService ProgramService
@inject IUserService UserService
@inject IAuthService AuthService
<div class="row">
     <div class="col-12">
          
          @if (NoteService.Objects is not null)
          {
               <div class="row">
                    <h3>Active Notes</h3>
                    @if (NoteService.Active.Count == 0)
                    {
                         <p>No Active Notes</p>
                    }
                    else
                    {
                         @foreach (var item in NoteService.Active)
                         {
                              <div class="col-4">
                                   <Card Note="item" ShowMoreDetails="ShowMoreDetails"/>
                              </div>
                         }
                    }
               </div>
               <h3>Dismissed Notes</h3>
               <div class="row">
                    @if (NoteService.Dismissed.Count == 0)
                    {
                         <p>No Dismissed Notes</p>
                    }
                    else
                    {
                         @foreach (var item in NoteService.Dismissed)
                         {
                              <div class="col-4">
                                   <Card Note="item" ShowMoreDetails="ShowMoreDetails"/>
                              </div>
                         }
                    }
               </div>
          }
          else
          {
               <!-- Growing Color spinnersr -->
               <div class="spinner-grow text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
               </div>
          }
     </div>
     @* <div class="col-3"> *@
     @*      <NoteDetailsSidebar Note="@Note" Program="@Program"/> *@
     @* </div> *@
</div>

            @* <!-- Full Screen Modal --> *@
            @*   <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#fullscreenModal"> *@
            @*     Full Screen Modal *@
            @*   </button> *@


<!-- Vertically centered Modal -->
<div class="modal fade" id="verticalycentered" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-lg">
          <div class="modal-content">
               <div class="modal-header">
                    <h5 class="modal-title">@Note?.Name Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
               </div>
               <div class="modal-body">
                    @if (Program is not null && Note is not null)
                    {
                         <h5>Details</h5>
                         <div class="row">
                              <h6 class="col-3">Name</h6>
                              <p class="col-9">@Note.Name</p>
                              <h6 class="col-3">Id</h6>
                              <p class="col-9">@Note.Id</p>

                              <h6 class="col-3">Note</h6>
                              <p class="col-9">@Note.Content</p>

                              <h6 class="col-3">Program</h6>
                              <ProgramCard Program="@Program"/>

                              <h6 class="col-3">Date</h6>
                              <p class="col-9">@Note.Date</p>

                              <h6 class="col-3">State</h6>
                              <p class="col-9">@Note.State</p>
                              <div class="col-12">
                                   @if (Note.Messages is not null && Note.Messages.Count > 0)
                                   {
                                        <h6>Chat</h6>
                                        @foreach (var message in Note.Messages)
                                        {
                                             if (message.UserId == MyID)
                                             {
                                                  <div class="row">
                                                       <div class="col-lg-4 col-sm-12">
                                                            <div class="float-end alert alert-primary  p-1 m-1 col-7"
                                                                 role="alert">
                                                                 <small class="text-muted p-0 m-0">
                                                                      @message.Content - @AWFunctions.HowLongAgo(message.Time)
                                                                 </small>
                                                            </div>
                                                       </div>
                                                  </div>
                                             }
                                             else
                                             {
                                                  <div class="row">
                                                       <div class="col-lg-4 col-sm-12">
                                                            <div class="float-start alert alert-secondary p-1 m-1 col-7"
                                                                 role="alert">
                                                                 <small class="p-0 m-0">@UserService.Objects.FirstOrDefault(x => x.Id == message.UserId).Name</small>
                                                                 <small class="text-muted p-0 m-0">
                                                                      @message.Content - @AWFunctions.HowLongAgo(message.Time)
                                                                 </small>
                                                            </div>
                                                       </div>
                                                  </div>
                                             }
                                        }
                                   }
                              </div>
                              <h6 class="col-3">Ralated Notes</h6>
                              @foreach (var item in NoteService.Objects.Where(x => x.ProgramId == Program.Id))
                              {
                                   <Card Note="item"/>
                              }

                         </div>
                    }
                    else
                    {
                         <p>No Note Selected</p>
                    }
               </div>
               <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Save changes</button>
               </div>
          </div>
     </div>
</div><!-- End Full Screen Modal-->


@code {
 
 
     public int MyID { get; set; }
   
     [Parameter]
     public int Id { get; set; }
     Note Note { get; set; }

     Program Program { get; set; }

     public void ShowMoreDetails(int id)
     {
          Id = id;
          OnInitialized();
          Console.WriteLine($"Show More {id}");
          StateHasChanged();
     }
     protected override async void OnInitialized()
     {
          await NoteService.Get();
          await AuthService.InitialiseAuthState();
          MyID = await AuthService.GetId();
          if (Id > 0)
          {
               Note = (await NoteService.Get(id: Id)).First();
          }
          if(Note != null && Note.ProgramId != null)
               Program = (await ProgramService.Get(id: (int)Note.ProgramId)).First();

          StateHasChanged();
     }


}
